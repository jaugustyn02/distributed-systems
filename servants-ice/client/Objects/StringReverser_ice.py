# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `StringReverser.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Objects
_M_Objects = Ice.openModule('Objects')
__name__ = 'Objects'

_M_Objects._t_StringReverser = IcePy.defineValue('::Objects::StringReverser', Ice.Value, -1, (), False, True, None, ())

if 'StringReverserPrx' not in _M_Objects.__dict__:
    _M_Objects.StringReverserPrx = Ice.createTempClass()
    class StringReverserPrx(Ice.ObjectPrx):

        def reverse(self, text, context=None):
            return _M_Objects.StringReverser._op_reverse.invoke(self, ((text, ), context))

        def reverseAsync(self, text, context=None):
            return _M_Objects.StringReverser._op_reverse.invokeAsync(self, ((text, ), context))

        def begin_reverse(self, text, _response=None, _ex=None, _sent=None, context=None):
            return _M_Objects.StringReverser._op_reverse.begin(self, ((text, ), _response, _ex, _sent, context))

        def end_reverse(self, _r):
            return _M_Objects.StringReverser._op_reverse.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Objects.StringReverserPrx.ice_checkedCast(proxy, '::Objects::StringReverser', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Objects.StringReverserPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Objects::StringReverser'
    _M_Objects._t_StringReverserPrx = IcePy.defineProxy('::Objects::StringReverser', StringReverserPrx)

    _M_Objects.StringReverserPrx = StringReverserPrx
    del StringReverserPrx

    _M_Objects.StringReverser = Ice.createTempClass()
    class StringReverser(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::Objects::StringReverser')

        def ice_id(self, current=None):
            return '::Objects::StringReverser'

        @staticmethod
        def ice_staticId():
            return '::Objects::StringReverser'

        def reverse(self, text, current=None):
            raise NotImplementedError("servant method 'reverse' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Objects._t_StringReverserDisp)

        __repr__ = __str__

    _M_Objects._t_StringReverserDisp = IcePy.defineClass('::Objects::StringReverser', StringReverser, (), None, ())
    StringReverser._ice_type = _M_Objects._t_StringReverserDisp

    StringReverser._op_reverse = IcePy.Operation('reverse', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), ())

    _M_Objects.StringReverser = StringReverser
    del StringReverser

# End of module Objects
